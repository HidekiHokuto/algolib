# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Hideki Hokuto
# This file is distributed under the same license as the Algolib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Algolib \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-28 00:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/algolib.algorithms.rst:2
msgid "algolib.algorithms package"
msgstr "algolib.algorithms 包"

#: ../source/api/algolib.algorithms.rst:5
msgid "Submodules"
msgstr "子模块"

#: ../source/api/algolib.algorithms.rst:8
#, fuzzy
msgid "algolib.algorithms.rootfinding module"
msgstr "algolib.algorithms.sort\\_demo 模块"

#: algolib.algorithms.rootfinding.newton:1 of
msgid "General Newton-Raphson root finding."
msgstr ""

#: algolib.algorithms.rootfinding.newton
#: algolib.algorithms.sort_demo.bubble_sort
#: algolib.algorithms.sort_demo.insertion_sort of
msgid "Parameters"
msgstr "参数"

#: algolib.algorithms.rootfinding.newton:3 of
msgid "Function whose root is to be found."
msgstr ""

#: algolib.algorithms.rootfinding.newton:5 of
msgid ""
"Derivative of ``f``. If ``None``, a forward finite-difference approximation "
"is used."
msgstr ""

#: algolib.algorithms.rootfinding.newton:8 of
msgid "Initial guess."
msgstr ""

#: algolib.algorithms.rootfinding.newton:10 of
msgid "Relative tolerance for convergence. Defaults to ``1e-15``."
msgstr ""

#: algolib.algorithms.rootfinding.newton:12 of
msgid "Maximum number of iterations. Defaults to ``100``."
msgstr ""

#: algolib.algorithms.rootfinding.newton:14 of
msgid ""
"Step size used by the finite-difference derivative when ``fprime`` is "
"``None``. Defaults to ``1e-8``."
msgstr ""

#: algolib.algorithms.rootfinding.newton
#: algolib.algorithms.sort_demo.bubble_sort
#: algolib.algorithms.sort_demo.insertion_sort of
msgid "Returns"
msgstr "返回"

#: algolib.algorithms.rootfinding.newton:18 of
msgid "Approximate root of :math:`f(x) = 0`."
msgstr ""

#: algolib.algorithms.rootfinding.newton
#: algolib.algorithms.sort_demo.bubble_sort
#: algolib.algorithms.sort_demo.insertion_sort of
msgid "Return type"
msgstr "返回类型"

#: algolib.algorithms.rootfinding.newton of
msgid "Raises"
msgstr ""

#: algolib.algorithms.rootfinding.newton:21 of
msgid ""
"If convergence is not reached within ``max_iter`` iterations     or the "
"derivative becomes zero."
msgstr ""

#: algolib.algorithms.rootfinding.newton:24
#: algolib.algorithms.sort_demo.bubble_sort:10
#: algolib.algorithms.sort_demo.insertion_sort:10 of
msgid "Notes"
msgstr "说明"

#: algolib.algorithms.rootfinding.newton:25 of
#, python-brace-format
msgid ""
"The update is :math:`x_{n+1} = x_n - f(x_n) / f'(x_n)`. Convergence is "
"tested using ``abs(dx) <= tol * max(1.0, abs(x_{n+1}))``."
msgstr ""

#: ../source/api/algolib.algorithms.rst:16
msgid "algolib.algorithms.sort\\_demo module"
msgstr "algolib.algorithms.sort\\_demo 模块"

#: algolib.algorithms.sort_demo:1 of
msgid "Teaching implementations of basic sorting algorithms."
msgstr "基础排序算法的教学实现。"

#: algolib.algorithms.sort_demo:3 of
msgid ""
"This module contains simple, dependency-free reference implementations of "
"classical sorting algorithms. They are intended for educational use and "
"small inputs, not for performance."
msgstr ""
"本模块提供经典排序算法的简单、零依赖的参考实现。这些实现面向教学用途和小规模"
"输入，并非以性能为目标。"

#: algolib.algorithms.sort_demo.bubble_sort:1 of
msgid "Sort a list using the bubble sort algorithm."
msgstr "使用冒泡排序算法对列表进行排序。"

#: algolib.algorithms.sort_demo.bubble_sort:3
#: algolib.algorithms.sort_demo.insertion_sort:3 of
msgid "Input sequence of numbers."
msgstr "输入的数值序列。"

#: algolib.algorithms.sort_demo.bubble_sort:6
#: algolib.algorithms.sort_demo.insertion_sort:6 of
msgid "A new list containing the sorted values in ascending order."
msgstr "包含升序结果的新列表。"

#: algolib.algorithms.sort_demo.bubble_sort:11 of
#, python-brace-format
msgid "Time complexity: :math:`\\mathcal{O}(n^2)`"
msgstr "时间复杂度：:math:`\\mathcal{O}(n^2)`"

#: algolib.algorithms.sort_demo.bubble_sort:12 of
#, python-brace-format
msgid ""
"Space complexity: :math:`\\mathcal{O}(1)` extra (besides the output copy)"
msgstr "空间复杂度：:math:`\\mathcal{O}(1)` 额外开销（不计输出副本）"

#: algolib.algorithms.sort_demo.bubble_sort:13 of
msgid "Stable: yes"
msgstr "稳定性：稳定（是）"

#: algolib.algorithms.sort_demo.bubble_sort:15
#: algolib.algorithms.sort_demo.insertion_sort:15 of
msgid "This implementation makes a copy of the input and sorts in place."
msgstr "该实现会复制输入并在副本上就地排序。"

#: algolib.algorithms.sort_demo.insertion_sort:1 of
msgid "Sort a list using the insertion sort algorithm."
msgstr "使用插入排序算法对列表进行排序。"

#: algolib.algorithms.sort_demo.insertion_sort:11 of
#, python-brace-format
msgid "Time complexity: :math:`\\mathcal{O}(n^2)` in the worst case."
msgstr "时间复杂度：最坏情况 :math:`\\mathcal{O}(n^2)`"

#: algolib.algorithms.sort_demo.insertion_sort:12 of
#, python-brace-format
msgid ""
"Space complexity: :math:`\\mathcal{O}(1)` extra (besides the output copy)."
msgstr "空间复杂度：:math:`\\mathcal{O}(1)` 额外开销（不计输出副本）。"

#: algolib.algorithms.sort_demo.insertion_sort:13 of
msgid "Stable: yes."
msgstr "稳定性：稳定。"

#: ../source/api/algolib.algorithms.rst:24
msgid "Module contents"
msgstr "模块内容"
